// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/transaction.protofiles

package taas_proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Result int32

const (
	Result_Fail    Result = 0
	Result_Success Result = 1
)

var Result_name = map[int32]string{
	0: "Fail",
	1: "Success",
}
var Result_value = map[string]int32{
	"Fail":    0,
	"Success": 1,
}

func (x Result) String() string {
	return proto.EnumName(Result_name, int32(x))
}
func (Result) EnumDescriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

type TxnType int32

const (
	TxnType_ClientTxn       TxnType = 0
	TxnType_RemoteServerTxn TxnType = 1
	TxnType_EpochEndFlag    TxnType = 2
	TxnType_CommittedTxn    TxnType = 3
)

var TxnType_name = map[int32]string{
	0: "ClientTxn",
	1: "RemoteServerTxn",
	2: "EpochEndFlag",
	3: "CommittedTxn",
}
var TxnType_value = map[string]int32{
	"ClientTxn":       0,
	"RemoteServerTxn": 1,
	"EpochEndFlag":    2,
	"CommittedTxn":    3,
}

func (x TxnType) String() string {
	return proto.EnumName(TxnType_name, int32(x))
}
func (TxnType) EnumDescriptor() ([]byte, []int) { return fileDescriptor6, []int{1} }

type TxnState int32

const (
	TxnState_Empty  TxnState = 0
	TxnState_Abort  TxnState = 1
	TxnState_Commit TxnState = 2
)

var TxnState_name = map[int32]string{
	0: "Empty",
	1: "Abort",
	2: "Commit",
}
var TxnState_value = map[string]int32{
	"Empty":  0,
	"Abort":  1,
	"Commit": 2,
}

func (x TxnState) String() string {
	return proto.EnumName(TxnState_name, int32(x))
}
func (TxnState) EnumDescriptor() ([]byte, []int) { return fileDescriptor6, []int{2} }

type OpType int32

const (
	OpType_Read   OpType = 0
	OpType_Insert OpType = 1
	OpType_Update OpType = 2
	OpType_Delete OpType = 3
)

var OpType_name = map[int32]string{
	0: "Read",
	1: "Insert",
	2: "Update",
	3: "Delete",
}
var OpType_value = map[string]int32{
	"Read":   0,
	"Insert": 1,
	"Update": 2,
	"Delete": 3,
}

func (x OpType) String() string {
	return proto.EnumName(OpType_name, int32(x))
}
func (OpType) EnumDescriptor() ([]byte, []int) { return fileDescriptor6, []int{3} }

type Column struct {
	Id    uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *Column) Reset()                    { *m = Column{} }
func (m *Column) String() string            { return proto.CompactTextString(m) }
func (*Column) ProtoMessage()               {}
func (*Column) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

func (m *Column) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Column) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type Row struct {
	OpType    OpType    `protobuf:"varint,1,opt,name=op_type,json=opType,enum=pb.OpType" json:"op_type,omitempty"`
	TableName string    `protobuf:"bytes,2,opt,name=table_name,json=tableName" json:"table_name,omitempty"`
	Key       []byte    `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Data      []byte    `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Column    []*Column `protobuf:"bytes,5,rep,name=column" json:"column,omitempty"`
}

func (m *Row) Reset()                    { *m = Row{} }
func (m *Row) String() string            { return proto.CompactTextString(m) }
func (*Row) ProtoMessage()               {}
func (*Row) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{1} }

func (m *Row) GetOpType() OpType {
	if m != nil {
		return m.OpType
	}
	return OpType_Read
}

func (m *Row) GetTableName() string {
	if m != nil {
		return m.TableName
	}
	return ""
}

func (m *Row) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *Row) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Row) GetColumn() []*Column {
	if m != nil {
		return m.Column
	}
	return nil
}

type Transaction struct {
	Row         []*Row   `protobuf:"bytes,1,rep,name=row" json:"row,omitempty"`
	StartEpoch  uint64   `protobuf:"varint,2,opt,name=start_epoch,json=startEpoch" json:"start_epoch,omitempty"`
	CommitEpoch uint64   `protobuf:"varint,3,opt,name=commit_epoch,json=commitEpoch" json:"commit_epoch,omitempty"`
	Csn         uint64   `protobuf:"varint,4,opt,name=csn" json:"csn,omitempty"`
	ServerIp    string   `protobuf:"bytes,5,opt,name=server_ip,json=serverIp" json:"server_ip,omitempty"`
	ServerId    uint32   `protobuf:"varint,6,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	ClientIp    string   `protobuf:"bytes,7,opt,name=client_ip,json=clientIp" json:"client_ip,omitempty"`
	ClientTxnId uint64   `protobuf:"varint,8,opt,name=client_txn_id,json=clientTxnId" json:"client_txn_id,omitempty"`
	TxnType     TxnType  `protobuf:"varint,9,opt,name=txn_type,json=txnType,enum=pb.TxnType" json:"txn_type,omitempty"`
	TxnState    TxnState `protobuf:"varint,10,opt,name=txn_state,json=txnState,enum=pb.TxnState" json:"txn_state,omitempty"`
}

func (m *Transaction) Reset()                    { *m = Transaction{} }
func (m *Transaction) String() string            { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()               {}
func (*Transaction) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{2} }

func (m *Transaction) GetRow() []*Row {
	if m != nil {
		return m.Row
	}
	return nil
}

func (m *Transaction) GetStartEpoch() uint64 {
	if m != nil {
		return m.StartEpoch
	}
	return 0
}

func (m *Transaction) GetCommitEpoch() uint64 {
	if m != nil {
		return m.CommitEpoch
	}
	return 0
}

func (m *Transaction) GetCsn() uint64 {
	if m != nil {
		return m.Csn
	}
	return 0
}

func (m *Transaction) GetServerIp() string {
	if m != nil {
		return m.ServerIp
	}
	return ""
}

func (m *Transaction) GetServerId() uint32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

func (m *Transaction) GetClientIp() string {
	if m != nil {
		return m.ClientIp
	}
	return ""
}

func (m *Transaction) GetClientTxnId() uint64 {
	if m != nil {
		return m.ClientTxnId
	}
	return 0
}

func (m *Transaction) GetTxnType() TxnType {
	if m != nil {
		return m.TxnType
	}
	return TxnType_ClientTxn
}

func (m *Transaction) GetTxnState() TxnState {
	if m != nil {
		return m.TxnState
	}
	return TxnState_Empty
}

func init() {
	proto.RegisterType((*Column)(nil), "pb.Column")
	proto.RegisterType((*Row)(nil), "pb.Row")
	proto.RegisterType((*Transaction)(nil), "pb.Transaction")
	proto.RegisterEnum("pb.Result", Result_name, Result_value)
	proto.RegisterEnum("pb.TxnType", TxnType_name, TxnType_value)
	proto.RegisterEnum("pb.TxnState", TxnState_name, TxnState_value)
	proto.RegisterEnum("pb.OpType", OpType_name, OpType_value)
}

func init() { proto.RegisterFile("pb/transaction.protofiles", fileDescriptor6) }

var fileDescriptor6 = []byte{
	// 508 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x52, 0xdd, 0x8e, 0xd2, 0x40,
	0x14, 0xa6, 0x2d, 0xb4, 0xf4, 0x14, 0xd6, 0xc9, 0xb8, 0x17, 0x55, 0x63, 0x76, 0xc5, 0xc4, 0xac,
	0xc4, 0xb0, 0x89, 0x26, 0xde, 0x1b, 0x64, 0x13, 0x6e, 0x34, 0x0e, 0x78, 0x4d, 0xa6, 0xed, 0x89,
	0x36, 0xb6, 0x33, 0x93, 0x76, 0x58, 0xe0, 0x39, 0x7c, 0x2d, 0x1f, 0xca, 0xcc, 0x19, 0x88, 0x5e,
	0xf1, 0xf1, 0xfd, 0x9c, 0x7e, 0x67, 0x66, 0xe0, 0xda, 0x14, 0xf7, 0xb6, 0x93, 0xaa, 0x97, 0xa5,
	0xad, 0xb5, 0x5a, 0x98, 0x4e, 0x5b, 0xcd, 0x43, 0x53, 0x3c, 0x9f, 0x9a, 0xe2, 0x5e, 0xe9, 0x0a,
	0x3d, 0x35, 0x5b, 0x40, 0xbc, 0xd4, 0xcd, 0xbe, 0x55, 0xfc, 0x0a, 0xc2, 0xba, 0xca, 0x83, 0xdb,
	0xe0, 0x6e, 0x2a, 0xc2, 0xba, 0xe2, 0xd7, 0x30, 0x7a, 0x94, 0xcd, 0x1e, 0xf3, 0xf0, 0x36, 0xb8,
	0x9b, 0x08, 0xff, 0x67, 0xf6, 0x3b, 0x80, 0x48, 0xe8, 0x03, 0x7f, 0x0d, 0x89, 0x36, 0x3b, 0x7b,
	0x32, 0x48, 0x91, 0xab, 0xf7, 0xb0, 0x30, 0xc5, 0xe2, 0xab, 0xd9, 0x9e, 0x0c, 0x8a, 0x58, 0xd3,
	0x2f, 0x7f, 0x09, 0x60, 0x65, 0xd1, 0xe0, 0x4e, 0xc9, 0xd6, 0xcf, 0x49, 0x45, 0x4a, 0xcc, 0x17,
	0xd9, 0x22, 0x67, 0x10, 0xfd, 0xc2, 0x53, 0x1e, 0xd1, 0x7c, 0x07, 0x39, 0x87, 0x61, 0x25, 0xad,
	0xcc, 0x87, 0x44, 0x11, 0xe6, 0x33, 0x88, 0x4b, 0x6a, 0x98, 0x8f, 0x6e, 0xa3, 0xbb, 0xcc, 0x7f,
	0xc8, 0x77, 0x16, 0x67, 0x65, 0xf6, 0x27, 0x84, 0x6c, 0xfb, 0x6f, 0x5d, 0xfe, 0x0c, 0xa2, 0x4e,
	0x1f, 0xf2, 0x80, 0x02, 0x89, 0x0b, 0x08, 0x7d, 0x10, 0x8e, 0xe3, 0x37, 0x90, 0xf5, 0x56, 0x76,
	0x76, 0x87, 0x46, 0x97, 0x3f, 0xa9, 0xd4, 0x50, 0x00, 0x51, 0x2b, 0xc7, 0xf0, 0x57, 0x30, 0x29,
	0x75, 0xdb, 0xd6, 0x17, 0x47, 0x44, 0x8e, 0xcc, 0x73, 0xde, 0xc2, 0x20, 0x2a, 0x7b, 0x45, 0x2d,
	0x87, 0xc2, 0x41, 0xfe, 0x02, 0xd2, 0x1e, 0xbb, 0x47, 0xec, 0x76, 0xb5, 0xc9, 0x47, 0xb4, 0xe8,
	0xd8, 0x13, 0x6b, 0xf3, 0xbf, 0x58, 0xe5, 0x31, 0x1d, 0xf0, 0x45, 0xac, 0x9c, 0x58, 0x36, 0x35,
	0x2a, 0xeb, 0x92, 0x89, 0x4f, 0x7a, 0x62, 0x6d, 0xf8, 0x0c, 0xa6, 0x67, 0xd1, 0x1e, 0x95, 0x4b,
	0x8f, 0xcf, 0x65, 0x88, 0xdc, 0x1e, 0xd5, 0xba, 0xe2, 0x6f, 0x60, 0xec, 0x44, 0xba, 0x8a, 0x94,
	0xae, 0x22, 0x73, 0x0b, 0x6f, 0x8f, 0x8a, 0xee, 0x22, 0xb1, 0x1e, 0xf0, 0xb7, 0x90, 0x3a, 0x5f,
	0x6f, 0xa5, 0xc5, 0x1c, 0xc8, 0x38, 0x39, 0x1b, 0x37, 0x8e, 0x13, 0x6e, 0x0c, 0xa1, 0xf9, 0x0d,
	0xc4, 0x02, 0xfb, 0x7d, 0x63, 0xf9, 0x18, 0x86, 0x0f, 0xb2, 0x6e, 0xd8, 0x80, 0x67, 0x90, 0x6c,
	0xf6, 0x65, 0x89, 0x7d, 0xcf, 0x82, 0xf9, 0x37, 0x48, 0xce, 0xf3, 0xf9, 0x14, 0xd2, 0xe5, 0xa5,
	0x0d, 0x1b, 0xf0, 0xa7, 0xf0, 0x44, 0x60, 0xab, 0x2d, 0x6e, 0x68, 0x41, 0x47, 0x06, 0x9c, 0xc1,
	0x84, 0x0e, 0x6e, 0xa5, 0xaa, 0x87, 0x46, 0xfe, 0x60, 0xa1, 0x63, 0x96, 0x74, 0xa0, 0x16, 0x2b,
	0xe7, 0x89, 0xe6, 0xef, 0x60, 0x7c, 0x69, 0xc2, 0x53, 0x18, 0xad, 0x5a, 0x63, 0x4f, 0x6c, 0xe0,
	0xe0, 0xa7, 0x42, 0x77, 0x96, 0x05, 0x1c, 0xdc, 0x53, 0x75, 0x19, 0x16, 0xce, 0x3f, 0x42, 0xec,
	0xdf, 0x9a, 0x6b, 0x28, 0x50, 0x56, 0x6c, 0xe0, 0xf4, 0xb5, 0xea, 0xf1, 0xe2, 0xfd, 0x6e, 0x2a,
	0x69, 0x91, 0x85, 0x0e, 0x7f, 0xc6, 0x06, 0x2d, 0xb2, 0xa8, 0x88, 0xe9, 0xd5, 0x7f, 0xf8, 0x1b,
	0x00, 0x00, 0xff, 0xff, 0x92, 0xe6, 0x1a, 0xbb, 0x20, 0x03, 0x00, 0x00,
}
