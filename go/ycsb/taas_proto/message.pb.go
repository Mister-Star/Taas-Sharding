// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/message.protofiles

package taas_proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Message struct {
	// Types that are valid to be assigned to Type:
	//	*Message_Txn
	//	*Message_ReplyTxnResultToClient
	//	*Message_ClientReadRequest
	//	*Message_ClientReadResponse
	//	*Message_StoragePullRequest
	//	*Message_StoragePullResponse
	//	*Message_StoragePushResponse
	//	*Message_RaftRequest
	//	*Message_RaftResponse
	Type isMessage_Type `protobuf_oneof:"type"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type isMessage_Type interface{ isMessage_Type() }

type Message_Txn struct {
	Txn *Transaction `protobuf:"bytes,1,opt,name=txn,oneof"`
}
type Message_ReplyTxnResultToClient struct {
	ReplyTxnResultToClient *ReplyTransactionToClient `protobuf:"bytes,2,opt,name=reply_txn_result_to_client,json=replyTxnResultToClient,oneof"`
}
type Message_ClientReadRequest struct {
	ClientReadRequest *ClientReadRequest `protobuf:"bytes,3,opt,name=client_read_request,json=clientReadRequest,oneof"`
}
type Message_ClientReadResponse struct {
	ClientReadResponse *ClientReadResponse `protobuf:"bytes,4,opt,name=client_read_response,json=clientReadResponse,oneof"`
}
type Message_StoragePullRequest struct {
	StoragePullRequest *StoragePullRequest `protobuf:"bytes,5,opt,name=storage_pull_request,json=storagePullRequest,oneof"`
}
type Message_StoragePullResponse struct {
	StoragePullResponse *StoragePullResponse `protobuf:"bytes,6,opt,name=storage_pull_response,json=storagePullResponse,oneof"`
}
type Message_StoragePushResponse struct {
	StoragePushResponse *StoragePushResponse `protobuf:"bytes,7,opt,name=storage_push_response,json=storagePushResponse,oneof"`
}
type Message_RaftRequest struct {
	RaftRequest *RaftRequest `protobuf:"bytes,8,opt,name=raft_request,json=raftRequest,oneof"`
}
type Message_RaftResponse struct {
	RaftResponse *RaftResponse `protobuf:"bytes,9,opt,name=raft_response,json=raftResponse,oneof"`
}

func (*Message_Txn) isMessage_Type()                    {}
func (*Message_ReplyTxnResultToClient) isMessage_Type() {}
func (*Message_ClientReadRequest) isMessage_Type()      {}
func (*Message_ClientReadResponse) isMessage_Type()     {}
func (*Message_StoragePullRequest) isMessage_Type()     {}
func (*Message_StoragePullResponse) isMessage_Type()    {}
func (*Message_StoragePushResponse) isMessage_Type()    {}
func (*Message_RaftRequest) isMessage_Type()            {}
func (*Message_RaftResponse) isMessage_Type()           {}

func (m *Message) GetType() isMessage_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Message) GetTxn() *Transaction {
	if x, ok := m.GetType().(*Message_Txn); ok {
		return x.Txn
	}
	return nil
}

func (m *Message) GetReplyTxnResultToClient() *ReplyTransactionToClient {
	if x, ok := m.GetType().(*Message_ReplyTxnResultToClient); ok {
		return x.ReplyTxnResultToClient
	}
	return nil
}

func (m *Message) GetClientReadRequest() *ClientReadRequest {
	if x, ok := m.GetType().(*Message_ClientReadRequest); ok {
		return x.ClientReadRequest
	}
	return nil
}

func (m *Message) GetClientReadResponse() *ClientReadResponse {
	if x, ok := m.GetType().(*Message_ClientReadResponse); ok {
		return x.ClientReadResponse
	}
	return nil
}

func (m *Message) GetStoragePullRequest() *StoragePullRequest {
	if x, ok := m.GetType().(*Message_StoragePullRequest); ok {
		return x.StoragePullRequest
	}
	return nil
}

func (m *Message) GetStoragePullResponse() *StoragePullResponse {
	if x, ok := m.GetType().(*Message_StoragePullResponse); ok {
		return x.StoragePullResponse
	}
	return nil
}

func (m *Message) GetStoragePushResponse() *StoragePushResponse {
	if x, ok := m.GetType().(*Message_StoragePushResponse); ok {
		return x.StoragePushResponse
	}
	return nil
}

func (m *Message) GetRaftRequest() *RaftRequest {
	if x, ok := m.GetType().(*Message_RaftRequest); ok {
		return x.RaftRequest
	}
	return nil
}

func (m *Message) GetRaftResponse() *RaftResponse {
	if x, ok := m.GetType().(*Message_RaftResponse); ok {
		return x.RaftResponse
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the protofiles package.
func (*Message) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Message_OneofMarshaler, _Message_OneofUnmarshaler, _Message_OneofSizer, []interface{}{
		(*Message_Txn)(nil),
		(*Message_ReplyTxnResultToClient)(nil),
		(*Message_ClientReadRequest)(nil),
		(*Message_ClientReadResponse)(nil),
		(*Message_StoragePullRequest)(nil),
		(*Message_StoragePullResponse)(nil),
		(*Message_StoragePushResponse)(nil),
		(*Message_RaftRequest)(nil),
		(*Message_RaftResponse)(nil),
	}
}

func _Message_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Message)
	// type
	switch x := m.Type.(type) {
	case *Message_Txn:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Txn); err != nil {
			return err
		}
	case *Message_ReplyTxnResultToClient:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ReplyTxnResultToClient); err != nil {
			return err
		}
	case *Message_ClientReadRequest:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ClientReadRequest); err != nil {
			return err
		}
	case *Message_ClientReadResponse:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ClientReadResponse); err != nil {
			return err
		}
	case *Message_StoragePullRequest:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StoragePullRequest); err != nil {
			return err
		}
	case *Message_StoragePullResponse:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StoragePullResponse); err != nil {
			return err
		}
	case *Message_StoragePushResponse:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StoragePushResponse); err != nil {
			return err
		}
	case *Message_RaftRequest:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RaftRequest); err != nil {
			return err
		}
	case *Message_RaftResponse:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RaftResponse); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Message.Type has unexpected type %T", x)
	}
	return nil
}

func _Message_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Message)
	switch tag {
	case 1: // type.txn
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Transaction)
		err := b.DecodeMessage(msg)
		m.Type = &Message_Txn{msg}
		return true, err
	case 2: // type.reply_txn_result_to_client
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReplyTransactionToClient)
		err := b.DecodeMessage(msg)
		m.Type = &Message_ReplyTxnResultToClient{msg}
		return true, err
	case 3: // type.client_read_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ClientReadRequest)
		err := b.DecodeMessage(msg)
		m.Type = &Message_ClientReadRequest{msg}
		return true, err
	case 4: // type.client_read_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ClientReadResponse)
		err := b.DecodeMessage(msg)
		m.Type = &Message_ClientReadResponse{msg}
		return true, err
	case 5: // type.storage_pull_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(StoragePullRequest)
		err := b.DecodeMessage(msg)
		m.Type = &Message_StoragePullRequest{msg}
		return true, err
	case 6: // type.storage_pull_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(StoragePullResponse)
		err := b.DecodeMessage(msg)
		m.Type = &Message_StoragePullResponse{msg}
		return true, err
	case 7: // type.storage_push_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(StoragePushResponse)
		err := b.DecodeMessage(msg)
		m.Type = &Message_StoragePushResponse{msg}
		return true, err
	case 8: // type.raft_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RaftRequest)
		err := b.DecodeMessage(msg)
		m.Type = &Message_RaftRequest{msg}
		return true, err
	case 9: // type.raft_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RaftResponse)
		err := b.DecodeMessage(msg)
		m.Type = &Message_RaftResponse{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Message_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Message)
	// type
	switch x := m.Type.(type) {
	case *Message_Txn:
		s := proto.Size(x.Txn)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Message_ReplyTxnResultToClient:
		s := proto.Size(x.ReplyTxnResultToClient)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Message_ClientReadRequest:
		s := proto.Size(x.ClientReadRequest)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Message_ClientReadResponse:
		s := proto.Size(x.ClientReadResponse)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Message_StoragePullRequest:
		s := proto.Size(x.StoragePullRequest)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Message_StoragePullResponse:
		s := proto.Size(x.StoragePullResponse)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Message_StoragePushResponse:
		s := proto.Size(x.StoragePushResponse)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Message_RaftRequest:
		s := proto.Size(x.RaftRequest)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Message_RaftResponse:
		s := proto.Size(x.RaftResponse)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("protofiles: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Message)(nil), "pb.Message")
}

func init() { proto.RegisterFile("pb/message.protofiles", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 361 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0xbb, 0x4f, 0xf3, 0x30,
	0x14, 0xc5, 0xd3, 0xf7, 0xf7, 0xb9, 0xad, 0x5a, 0xdc, 0x07, 0x51, 0xc4, 0x80, 0x60, 0x61, 0x6a,
	0x24, 0x40, 0x62, 0x87, 0x81, 0x08, 0xa9, 0x12, 0x32, 0x9d, 0x58, 0xa2, 0x38, 0x75, 0x69, 0x25,
	0x63, 0x1b, 0xdb, 0x41, 0xed, 0xc6, 0x9f, 0x8e, 0x62, 0x87, 0xb8, 0x6d, 0x3a, 0xde, 0x73, 0xee,
	0xf9, 0x9d, 0x9b, 0xc8, 0x60, 0x28, 0x70, 0xf8, 0x49, 0x94, 0x4a, 0x3e, 0xc8, 0x4c, 0x48, 0xae,
	0x39, 0xac, 0x0b, 0x1c, 0x8c, 0x05, 0x0e, 0xb5, 0x4c, 0x98, 0x4a, 0x52, 0xbd, 0xe1, 0xcc, 0x3a,
	0xc1, 0x40, 0xe0, 0x50, 0x11, 0xf9, 0x4d, 0xe4, 0x9e, 0x90, 0xd2, 0x0d, 0x61, 0xba, 0x10, 0x72,
	0x9a, 0xd2, 0x5c, 0x96, 0xb4, 0xa0, 0x2f, 0x70, 0xc8, 0xf8, 0xb2, 0x18, 0xaf, 0x7e, 0x5a, 0xa0,
	0x33, 0xb7, 0x75, 0xf0, 0x1a, 0x34, 0xf4, 0x96, 0xf9, 0xb5, 0xcb, 0xda, 0x4d, 0xf7, 0x76, 0x30,
	0x13, 0x78, 0xb6, 0x70, 0x95, 0x91, 0x87, 0x72, 0x17, 0xbe, 0x83, 0x40, 0x12, 0x41, 0x77, 0xb1,
	0xde, 0xb2, 0x58, 0x12, 0x95, 0x51, 0x1d, 0x6b, 0x1e, 0xdb, 0x56, 0xbf, 0x6e, 0xb2, 0x17, 0x79,
	0x16, 0xe5, 0x5b, 0x7b, 0x80, 0x05, 0x7f, 0x32, 0x3b, 0x91, 0x87, 0xa6, 0x86, 0xb0, 0xd8, 0x32,
	0x64, 0xf2, 0x7f, 0x0e, 0x7c, 0x06, 0x23, 0xcb, 0x89, 0x25, 0x49, 0x96, 0xb1, 0x24, 0x5f, 0x19,
	0x51, 0xda, 0x6f, 0x18, 0xe8, 0x24, 0x87, 0xda, 0x45, 0x44, 0x92, 0x25, 0xb2, 0x66, 0xe4, 0xa1,
	0xb3, 0xf4, 0x58, 0x84, 0x2f, 0x60, 0x7c, 0x08, 0x52, 0x82, 0x33, 0x45, 0xfc, 0xa6, 0x21, 0x4d,
	0x8f, 0x49, 0xd6, 0x8d, 0x3c, 0x04, 0xd3, 0x8a, 0x9a, 0xb3, 0x8a, 0x3f, 0x18, 0x8b, 0x8c, 0xd2,
	0xf2, 0xaa, 0x96, 0x63, 0xbd, 0x59, 0xff, 0x35, 0xa3, 0xd4, 0x9d, 0x05, 0x55, 0x45, 0x85, 0x73,
	0x30, 0x39, 0x62, 0x15, 0x87, 0xb5, 0x0d, 0xec, 0xbc, 0x02, 0x2b, 0x2f, 0x1b, 0xa9, 0xaa, 0x7c,
	0x88, 0x53, 0x6b, 0x87, 0xeb, 0x9c, 0xc0, 0xa9, 0xf5, 0x49, 0x9c, 0x93, 0xe1, 0x3d, 0xe8, 0xc9,
	0x64, 0xa5, 0xcb, 0x2f, 0xfc, 0xe7, 0x1e, 0x02, 0x4a, 0x56, 0xda, 0x7d, 0x5a, 0x57, 0xba, 0x11,
	0x3e, 0x80, 0x7e, 0x91, 0x2a, 0xca, 0xff, 0x9b, 0xd8, 0xd0, 0xc5, 0xca, 0xd6, 0x9e, 0xdc, 0x9b,
	0x1f, 0xdb, 0xa0, 0xa9, 0x77, 0x82, 0xe0, 0xb6, 0x79, 0x89, 0x77, 0xbf, 0x01, 0x00, 0x00, 0xff,
	0xff, 0xc6, 0xc4, 0x8c, 0x4f, 0xfa, 0x02, 0x00, 0x00,
}
