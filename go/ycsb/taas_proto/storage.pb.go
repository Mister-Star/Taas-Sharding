// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/storage.protofiles

package taas_proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type StoragePullRequest struct {
	EpochId  uint64 `protobuf:"varint,1,opt,name=epoch_id,json=epochId" json:"epoch_id,omitempty"`
	SendNode *Node  `protobuf:"bytes,2,opt,name=send_node,json=sendNode" json:"send_node,omitempty"`
	RecvNode *Node  `protobuf:"bytes,3,opt,name=recv_node,json=recvNode" json:"recv_node,omitempty"`
}

func (m *StoragePullRequest) Reset()                    { *m = StoragePullRequest{} }
func (m *StoragePullRequest) String() string            { return proto.CompactTextString(m) }
func (*StoragePullRequest) ProtoMessage()               {}
func (*StoragePullRequest) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

func (m *StoragePullRequest) GetEpochId() uint64 {
	if m != nil {
		return m.EpochId
	}
	return 0
}

func (m *StoragePullRequest) GetSendNode() *Node {
	if m != nil {
		return m.SendNode
	}
	return nil
}

func (m *StoragePullRequest) GetRecvNode() *Node {
	if m != nil {
		return m.RecvNode
	}
	return nil
}

type StoragePullResponse struct {
	Result   Result         `protobuf:"varint,1,opt,name=result,enum=pb.Result" json:"result,omitempty"`
	EpochId  uint64         `protobuf:"varint,2,opt,name=epoch_id,json=epochId" json:"epoch_id,omitempty"`
	TxnNum   uint64         `protobuf:"varint,3,opt,name=txn_num,json=txnNum" json:"txn_num,omitempty"`
	Txns     []*Transaction `protobuf:"bytes,4,rep,name=txns" json:"txns,omitempty"`
	SendNode *Node          `protobuf:"bytes,5,opt,name=send_node,json=sendNode" json:"send_node,omitempty"`
	RecvNode *Node          `protobuf:"bytes,6,opt,name=recv_node,json=recvNode" json:"recv_node,omitempty"`
}

func (m *StoragePullResponse) Reset()                    { *m = StoragePullResponse{} }
func (m *StoragePullResponse) String() string            { return proto.CompactTextString(m) }
func (*StoragePullResponse) ProtoMessage()               {}
func (*StoragePullResponse) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{1} }

func (m *StoragePullResponse) GetResult() Result {
	if m != nil {
		return m.Result
	}
	return Result_Fail
}

func (m *StoragePullResponse) GetEpochId() uint64 {
	if m != nil {
		return m.EpochId
	}
	return 0
}

func (m *StoragePullResponse) GetTxnNum() uint64 {
	if m != nil {
		return m.TxnNum
	}
	return 0
}

func (m *StoragePullResponse) GetTxns() []*Transaction {
	if m != nil {
		return m.Txns
	}
	return nil
}

func (m *StoragePullResponse) GetSendNode() *Node {
	if m != nil {
		return m.SendNode
	}
	return nil
}

func (m *StoragePullResponse) GetRecvNode() *Node {
	if m != nil {
		return m.RecvNode
	}
	return nil
}

type StoragePushResponse struct {
	Result   Result         `protobuf:"varint,1,opt,name=result,enum=pb.Result" json:"result,omitempty"`
	EpochId  uint64         `protobuf:"varint,2,opt,name=epoch_id,json=epochId" json:"epoch_id,omitempty"`
	TxnNum   uint64         `protobuf:"varint,3,opt,name=txn_num,json=txnNum" json:"txn_num,omitempty"`
	Txns     []*Transaction `protobuf:"bytes,4,rep,name=txns" json:"txns,omitempty"`
	SendNode *Node          `protobuf:"bytes,5,opt,name=send_node,json=sendNode" json:"send_node,omitempty"`
	RecvNode *Node          `protobuf:"bytes,6,opt,name=recv_node,json=recvNode" json:"recv_node,omitempty"`
}

func (m *StoragePushResponse) Reset()                    { *m = StoragePushResponse{} }
func (m *StoragePushResponse) String() string            { return proto.CompactTextString(m) }
func (*StoragePushResponse) ProtoMessage()               {}
func (*StoragePushResponse) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{2} }

func (m *StoragePushResponse) GetResult() Result {
	if m != nil {
		return m.Result
	}
	return Result_Fail
}

func (m *StoragePushResponse) GetEpochId() uint64 {
	if m != nil {
		return m.EpochId
	}
	return 0
}

func (m *StoragePushResponse) GetTxnNum() uint64 {
	if m != nil {
		return m.TxnNum
	}
	return 0
}

func (m *StoragePushResponse) GetTxns() []*Transaction {
	if m != nil {
		return m.Txns
	}
	return nil
}

func (m *StoragePushResponse) GetSendNode() *Node {
	if m != nil {
		return m.SendNode
	}
	return nil
}

func (m *StoragePushResponse) GetRecvNode() *Node {
	if m != nil {
		return m.RecvNode
	}
	return nil
}

func init() {
	proto.RegisterType((*StoragePullRequest)(nil), "pb.StoragePullRequest")
	proto.RegisterType((*StoragePullResponse)(nil), "pb.StoragePullResponse")
	proto.RegisterType((*StoragePushResponse)(nil), "pb.StoragePushResponse")
}

func init() { proto.RegisterFile("pb/storage.protofiles", fileDescriptor5) }

var fileDescriptor5 = []byte{
	// 265 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x92, 0xcf, 0x4a, 0xc4, 0x30,
	0x10, 0xc6, 0xe9, 0x6e, 0xed, 0xd6, 0x2c, 0xfe, 0x21, 0x0a, 0xd6, 0x3d, 0x95, 0x8a, 0xd0, 0x53,
	0x0b, 0xf5, 0x29, 0xbc, 0x2c, 0x12, 0xbd, 0x97, 0xa6, 0x09, 0xee, 0x42, 0x37, 0x89, 0x99, 0x89,
	0xf4, 0xe2, 0xbb, 0xfa, 0x28, 0x92, 0x74, 0x41, 0xea, 0x69, 0xcf, 0xde, 0x26, 0xf9, 0x7d, 0x33,
	0xdf, 0x7c, 0x21, 0xe4, 0xda, 0xf0, 0x1a, 0x50, 0xdb, 0xee, 0x5d, 0x56, 0xc6, 0x6a, 0xd4, 0x74,
	0x61, 0xf8, 0xe6, 0xd6, 0xf0, 0x1a, 0x6d, 0xa7, 0xa0, 0xeb, 0x71, 0xaf, 0xd5, 0x44, 0x36, 0x17,
	0x86, 0xd7, 0x4a, 0x8b, 0xa3, 0xb0, 0xf8, 0x22, 0xf4, 0x75, 0xea, 0x7c, 0x71, 0xc3, 0xc0, 0xe4,
	0x87, 0x93, 0x80, 0xf4, 0x9e, 0xa4, 0xd2, 0xe8, 0x7e, 0xd7, 0xee, 0x45, 0x16, 0xe5, 0x51, 0x19,
	0xb3, 0x55, 0x38, 0x3f, 0x0b, 0xfa, 0x48, 0xce, 0x41, 0x2a, 0xd1, 0xfa, 0x19, 0xd9, 0x22, 0x8f,
	0xca, 0x75, 0x93, 0x56, 0x86, 0x57, 0x5b, 0x2d, 0x24, 0x4b, 0x3d, 0xf2, 0x95, 0x97, 0x59, 0xd9,
	0x7f, 0x4e, 0xb2, 0xe5, 0x5f, 0x99, 0x47, 0xbe, 0x2a, 0xbe, 0x23, 0x72, 0x33, 0xf3, 0x07, 0xa3,
	0x15, 0x48, 0x5a, 0x90, 0xc4, 0x4a, 0x70, 0x03, 0x06, 0xfb, 0xcb, 0x86, 0xf8, 0x5e, 0x16, 0x6e,
	0xd8, 0x91, 0xcc, 0x96, 0x5c, 0xcc, 0x97, 0xbc, 0x23, 0x2b, 0x1c, 0x55, 0xab, 0xdc, 0x21, 0x78,
	0xc7, 0x2c, 0xc1, 0x51, 0x6d, 0xdd, 0x81, 0x3e, 0x90, 0x18, 0x47, 0x05, 0x59, 0x9c, 0x2f, 0xcb,
	0x75, 0x73, 0xe5, 0xa7, 0xbe, 0xfd, 0x3e, 0x11, 0x0b, 0x70, 0x1e, 0xf1, 0xec, 0xb4, 0x88, 0xc9,
	0x69, 0x11, 0x61, 0xf7, 0x0f, 0x23, 0xf2, 0x24, 0xfc, 0xa5, 0xa7, 0x9f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xe3, 0xff, 0x87, 0xfa, 0x88, 0x02, 0x00, 0x00,
}
