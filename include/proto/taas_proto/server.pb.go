// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.1
// source: server.proto

package taas_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReplyTransactionToClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientTxnId uint64   `protobuf:"varint,1,opt,name=client_txn_id,json=clientTxnId,proto3" json:"client_txn_id,omitempty"`
	TxnState    TxnState `protobuf:"varint,2,opt,name=txn_state,json=txnState,proto3,enum=proto.TxnState" json:"txn_state,omitempty"`
	SendNode    *Node    `protobuf:"bytes,3,opt,name=send_node,json=sendNode,proto3" json:"send_node,omitempty"`
	RecvNode    *Node    `protobuf:"bytes,4,opt,name=recv_node,json=recvNode,proto3" json:"recv_node,omitempty"`
}

func (x *ReplyTransactionToClient) Reset() {
	*x = ReplyTransactionToClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyTransactionToClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyTransactionToClient) ProtoMessage() {}

func (x *ReplyTransactionToClient) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyTransactionToClient.ProtoReflect.Descriptor instead.
func (*ReplyTransactionToClient) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{0}
}

func (x *ReplyTransactionToClient) GetClientTxnId() uint64 {
	if x != nil {
		return x.ClientTxnId
	}
	return 0
}

func (x *ReplyTransactionToClient) GetTxnState() TxnState {
	if x != nil {
		return x.TxnState
	}
	return TxnState_Empty
}

func (x *ReplyTransactionToClient) GetSendNode() *Node {
	if x != nil {
		return x.SendNode
	}
	return nil
}

func (x *ReplyTransactionToClient) GetRecvNode() *Node {
	if x != nil {
		return x.RecvNode
	}
	return nil
}

type RaftRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//	*RaftRequest_Ping
	//	*RaftRequest_Signal
	//	*RaftRequest_LookupMaster
	//	*RaftRequest_ForwardEpoch
	//	*RaftRequest_EpochReplicationAck
	//	*RaftRequest_RaftPropose
	//	*RaftRequest_RaftAccept
	//	*RaftRequest_RaftCommit
	//	*RaftRequest_Stats
	//	*RaftRequest_ChangeServerState
	Type isRaftRequest_Type `protobuf_oneof:"type"`
}

func (x *RaftRequest) Reset() {
	*x = RaftRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RaftRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaftRequest) ProtoMessage() {}

func (x *RaftRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaftRequest.ProtoReflect.Descriptor instead.
func (*RaftRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{1}
}

func (m *RaftRequest) GetType() isRaftRequest_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *RaftRequest) GetPing() *Ping {
	if x, ok := x.GetType().(*RaftRequest_Ping); ok {
		return x.Ping
	}
	return nil
}

func (x *RaftRequest) GetSignal() *Signal {
	if x, ok := x.GetType().(*RaftRequest_Signal); ok {
		return x.Signal
	}
	return nil
}

func (x *RaftRequest) GetLookupMaster() *LookupMasterRequest {
	if x, ok := x.GetType().(*RaftRequest_LookupMaster); ok {
		return x.LookupMaster
	}
	return nil
}

func (x *RaftRequest) GetForwardEpoch() *ForwardEpochRequest {
	if x, ok := x.GetType().(*RaftRequest_ForwardEpoch); ok {
		return x.ForwardEpoch
	}
	return nil
}

func (x *RaftRequest) GetEpochReplicationAck() *EpochReplicationAck {
	if x, ok := x.GetType().(*RaftRequest_EpochReplicationAck); ok {
		return x.EpochReplicationAck
	}
	return nil
}

func (x *RaftRequest) GetRaftPropose() *RaftPropose {
	if x, ok := x.GetType().(*RaftRequest_RaftPropose); ok {
		return x.RaftPropose
	}
	return nil
}

func (x *RaftRequest) GetRaftAccept() *RaftAcceptRequest {
	if x, ok := x.GetType().(*RaftRequest_RaftAccept); ok {
		return x.RaftAccept
	}
	return nil
}

func (x *RaftRequest) GetRaftCommit() *RaftCommitRequest {
	if x, ok := x.GetType().(*RaftRequest_RaftCommit); ok {
		return x.RaftCommit
	}
	return nil
}

func (x *RaftRequest) GetStats() *StatsRequest {
	if x, ok := x.GetType().(*RaftRequest_Stats); ok {
		return x.Stats
	}
	return nil
}

func (x *RaftRequest) GetChangeServerState() *ChangeServerStateRequest {
	if x, ok := x.GetType().(*RaftRequest_ChangeServerState); ok {
		return x.ChangeServerState
	}
	return nil
}

type isRaftRequest_Type interface {
	isRaftRequest_Type()
}

type RaftRequest_Ping struct {
	Ping *Ping `protobuf:"bytes,1,opt,name=ping,proto3,oneof"`
}

type RaftRequest_Signal struct {
	Signal *Signal `protobuf:"bytes,2,opt,name=signal,proto3,oneof"`
}

type RaftRequest_LookupMaster struct {
	LookupMaster *LookupMasterRequest `protobuf:"bytes,3,opt,name=lookup_master,json=lookupMaster,proto3,oneof"`
}

type RaftRequest_ForwardEpoch struct {
	ForwardEpoch *ForwardEpochRequest `protobuf:"bytes,4,opt,name=forward_epoch,json=forwardEpoch,proto3,oneof"`
}

type RaftRequest_EpochReplicationAck struct {
	EpochReplicationAck *EpochReplicationAck `protobuf:"bytes,5,opt,name=epoch_replication_ack,json=epochReplicationAck,proto3,oneof"`
}

type RaftRequest_RaftPropose struct {
	RaftPropose *RaftPropose `protobuf:"bytes,6,opt,name=raft_propose,json=raftPropose,proto3,oneof"`
}

type RaftRequest_RaftAccept struct {
	RaftAccept *RaftAcceptRequest `protobuf:"bytes,7,opt,name=raft_accept,json=raftAccept,proto3,oneof"`
}

type RaftRequest_RaftCommit struct {
	RaftCommit *RaftCommitRequest `protobuf:"bytes,8,opt,name=raft_commit,json=raftCommit,proto3,oneof"`
}

type RaftRequest_Stats struct {
	Stats *StatsRequest `protobuf:"bytes,9,opt,name=stats,proto3,oneof"`
}

type RaftRequest_ChangeServerState struct {
	ChangeServerState *ChangeServerStateRequest `protobuf:"bytes,10,opt,name=change_server_state,json=changeServerState,proto3,oneof"`
}

func (*RaftRequest_Ping) isRaftRequest_Type() {}

func (*RaftRequest_Signal) isRaftRequest_Type() {}

func (*RaftRequest_LookupMaster) isRaftRequest_Type() {}

func (*RaftRequest_ForwardEpoch) isRaftRequest_Type() {}

func (*RaftRequest_EpochReplicationAck) isRaftRequest_Type() {}

func (*RaftRequest_RaftPropose) isRaftRequest_Type() {}

func (*RaftRequest_RaftAccept) isRaftRequest_Type() {}

func (*RaftRequest_RaftCommit) isRaftRequest_Type() {}

func (*RaftRequest_Stats) isRaftRequest_Type() {}

func (*RaftRequest_ChangeServerState) isRaftRequest_Type() {}

type Ping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From int32 `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	To   int32 `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *Ping) Reset() {
	*x = Ping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ping) ProtoMessage() {}

func (x *Ping) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ping.ProtoReflect.Descriptor instead.
func (*Ping) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{2}
}

func (x *Ping) GetFrom() int32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *Ping) GetTo() int32 {
	if x != nil {
		return x.To
	}
	return 0
}

//*
// Generic signal message
type Signal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From int32 `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
}

func (x *Signal) Reset() {
	*x = Signal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Signal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signal) ProtoMessage() {}

func (x *Signal) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signal.ProtoReflect.Descriptor instead.
func (*Signal) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{3}
}

func (x *Signal) GetFrom() int32 {
	if x != nil {
		return x.From
	}
	return 0
}

type LookupMasterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxnIds []uint64 `protobuf:"varint,1,rep,packed,name=txn_ids,json=txnIds,proto3" json:"txn_ids,omitempty"`
	Keys   [][]byte `protobuf:"bytes,2,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *LookupMasterRequest) Reset() {
	*x = LookupMasterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookupMasterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupMasterRequest) ProtoMessage() {}

func (x *LookupMasterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupMasterRequest.ProtoReflect.Descriptor instead.
func (*LookupMasterRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{4}
}

func (x *LookupMasterRequest) GetTxnIds() []uint64 {
	if x != nil {
		return x.TxnIds
	}
	return nil
}

func (x *LookupMasterRequest) GetKeys() [][]byte {
	if x != nil {
		return x.Keys
	}
	return nil
}

type ForwardEpochRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From    int32  `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	To      int32  `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
	EpochId uint64 `protobuf:"varint,3,opt,name=epoch_id,json=epochId,proto3" json:"epoch_id,omitempty"`
}

func (x *ForwardEpochRequest) Reset() {
	*x = ForwardEpochRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForwardEpochRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForwardEpochRequest) ProtoMessage() {}

func (x *ForwardEpochRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForwardEpochRequest.ProtoReflect.Descriptor instead.
func (*ForwardEpochRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{5}
}

func (x *ForwardEpochRequest) GetFrom() int32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *ForwardEpochRequest) GetTo() int32 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *ForwardEpochRequest) GetEpochId() uint64 {
	if x != nil {
		return x.EpochId
	}
	return 0
}

type EpochReplicationAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EpochId uint64 `protobuf:"varint,1,opt,name=epoch_id,json=epochId,proto3" json:"epoch_id,omitempty"`
}

func (x *EpochReplicationAck) Reset() {
	*x = EpochReplicationAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpochReplicationAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpochReplicationAck) ProtoMessage() {}

func (x *EpochReplicationAck) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpochReplicationAck.ProtoReflect.Descriptor instead.
func (*EpochReplicationAck) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{6}
}

func (x *EpochReplicationAck) GetEpochId() uint64 {
	if x != nil {
		return x.EpochId
	}
	return 0
}

type RaftPropose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value uint64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RaftPropose) Reset() {
	*x = RaftPropose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RaftPropose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaftPropose) ProtoMessage() {}

func (x *RaftPropose) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaftPropose.ProtoReflect.Descriptor instead.
func (*RaftPropose) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{7}
}

func (x *RaftPropose) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type RaftAcceptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From    uint32 `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	To      uint32 `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
	EpochId uint64 `protobuf:"varint,3,opt,name=epoch_id,json=epochId,proto3" json:"epoch_id,omitempty"`
}

func (x *RaftAcceptRequest) Reset() {
	*x = RaftAcceptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RaftAcceptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaftAcceptRequest) ProtoMessage() {}

func (x *RaftAcceptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaftAcceptRequest.ProtoReflect.Descriptor instead.
func (*RaftAcceptRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{8}
}

func (x *RaftAcceptRequest) GetFrom() uint32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *RaftAcceptRequest) GetTo() uint32 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *RaftAcceptRequest) GetEpochId() uint64 {
	if x != nil {
		return x.EpochId
	}
	return 0
}

type RaftCommitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From    uint32 `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	To      uint32 `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
	EpochId uint64 `protobuf:"varint,3,opt,name=epoch_id,json=epochId,proto3" json:"epoch_id,omitempty"`
}

func (x *RaftCommitRequest) Reset() {
	*x = RaftCommitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RaftCommitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaftCommitRequest) ProtoMessage() {}

func (x *RaftCommitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaftCommitRequest.ProtoReflect.Descriptor instead.
func (*RaftCommitRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{9}
}

func (x *RaftCommitRequest) GetFrom() uint32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *RaftCommitRequest) GetTo() uint32 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *RaftCommitRequest) GetEpochId() uint64 {
	if x != nil {
		return x.EpochId
	}
	return 0
}

type StatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From  uint32 `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	To    uint32 `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
	Level uint32 `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *StatsRequest) Reset() {
	*x = StatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsRequest) ProtoMessage() {}

func (x *StatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsRequest.ProtoReflect.Descriptor instead.
func (*StatsRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{10}
}

func (x *StatsRequest) GetFrom() uint32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *StatsRequest) GetTo() uint32 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *StatsRequest) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type ChangeServerStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From         uint32 `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	To           uint32 `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
	Target       uint32 `protobuf:"varint,3,opt,name=target,proto3" json:"target,omitempty"`
	State        uint32 `protobuf:"varint,4,opt,name=state,proto3" json:"state,omitempty"`
	PullServerId uint32 `protobuf:"varint,5,opt,name=pull_server_id,json=pullServerId,proto3" json:"pull_server_id,omitempty"`
	EpochId      uint64 `protobuf:"varint,6,opt,name=epoch_id,json=epochId,proto3" json:"epoch_id,omitempty"`
}

func (x *ChangeServerStateRequest) Reset() {
	*x = ChangeServerStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeServerStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeServerStateRequest) ProtoMessage() {}

func (x *ChangeServerStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeServerStateRequest.ProtoReflect.Descriptor instead.
func (*ChangeServerStateRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{11}
}

func (x *ChangeServerStateRequest) GetFrom() uint32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *ChangeServerStateRequest) GetTo() uint32 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *ChangeServerStateRequest) GetTarget() uint32 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *ChangeServerStateRequest) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *ChangeServerStateRequest) GetPullServerId() uint32 {
	if x != nil {
		return x.PullServerId
	}
	return 0
}

func (x *ChangeServerStateRequest) GetEpochId() uint64 {
	if x != nil {
		return x.EpochId
	}
	return 0
}

//*
// A response is always preceeded by a Request
type RaftResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//	*RaftResponse_Pong
	//	*RaftResponse_LookupMaster
	//	*RaftResponse_RaftAccept
	//	*RaftResponse_RaftCommit
	//	*RaftResponse_Stats
	//	*RaftResponse_ChangeServerState
	Type isRaftResponse_Type `protobuf_oneof:"type"`
}

func (x *RaftResponse) Reset() {
	*x = RaftResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RaftResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaftResponse) ProtoMessage() {}

func (x *RaftResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaftResponse.ProtoReflect.Descriptor instead.
func (*RaftResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{12}
}

func (m *RaftResponse) GetType() isRaftResponse_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *RaftResponse) GetPong() *Pong {
	if x, ok := x.GetType().(*RaftResponse_Pong); ok {
		return x.Pong
	}
	return nil
}

func (x *RaftResponse) GetLookupMaster() *LookupMasterResponse {
	if x, ok := x.GetType().(*RaftResponse_LookupMaster); ok {
		return x.LookupMaster
	}
	return nil
}

func (x *RaftResponse) GetRaftAccept() *RaftAcceptResponse {
	if x, ok := x.GetType().(*RaftResponse_RaftAccept); ok {
		return x.RaftAccept
	}
	return nil
}

func (x *RaftResponse) GetRaftCommit() *RaftCommitResponse {
	if x, ok := x.GetType().(*RaftResponse_RaftCommit); ok {
		return x.RaftCommit
	}
	return nil
}

func (x *RaftResponse) GetStats() *StatsResponse {
	if x, ok := x.GetType().(*RaftResponse_Stats); ok {
		return x.Stats
	}
	return nil
}

func (x *RaftResponse) GetChangeServerState() *ChangeServerStateResponse {
	if x, ok := x.GetType().(*RaftResponse_ChangeServerState); ok {
		return x.ChangeServerState
	}
	return nil
}

type isRaftResponse_Type interface {
	isRaftResponse_Type()
}

type RaftResponse_Pong struct {
	Pong *Pong `protobuf:"bytes,1,opt,name=pong,proto3,oneof"`
}

type RaftResponse_LookupMaster struct {
	LookupMaster *LookupMasterResponse `protobuf:"bytes,2,opt,name=lookup_master,json=lookupMaster,proto3,oneof"`
}

type RaftResponse_RaftAccept struct {
	RaftAccept *RaftAcceptResponse `protobuf:"bytes,3,opt,name=raft_accept,json=raftAccept,proto3,oneof"`
}

type RaftResponse_RaftCommit struct {
	RaftCommit *RaftCommitResponse `protobuf:"bytes,4,opt,name=raft_commit,json=raftCommit,proto3,oneof"`
}

type RaftResponse_Stats struct {
	Stats *StatsResponse `protobuf:"bytes,5,opt,name=stats,proto3,oneof"`
}

type RaftResponse_ChangeServerState struct {
	ChangeServerState *ChangeServerStateResponse `protobuf:"bytes,6,opt,name=change_server_state,json=changeServerState,proto3,oneof"`
}

func (*RaftResponse_Pong) isRaftResponse_Type() {}

func (*RaftResponse_LookupMaster) isRaftResponse_Type() {}

func (*RaftResponse_RaftAccept) isRaftResponse_Type() {}

func (*RaftResponse_RaftCommit) isRaftResponse_Type() {}

func (*RaftResponse_Stats) isRaftResponse_Type() {}

func (*RaftResponse_ChangeServerState) isRaftResponse_Type() {}

//*
// For debugging and testing purposes
type Pong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From    int32 `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	To      int32 `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
	Time    int64 `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`
	EpochId int64 `protobuf:"varint,4,opt,name=epoch_id,json=epochId,proto3" json:"epoch_id,omitempty"`
}

func (x *Pong) Reset() {
	*x = Pong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pong) ProtoMessage() {}

func (x *Pong) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pong.ProtoReflect.Descriptor instead.
func (*Pong) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{13}
}

func (x *Pong) GetFrom() int32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *Pong) GetTo() int32 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *Pong) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Pong) GetEpochId() int64 {
	if x != nil {
		return x.EpochId
	}
	return 0
}

type MasterMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Master     uint32 `protobuf:"varint,1,opt,name=master,proto3" json:"master,omitempty"`
	EpochCount uint32 `protobuf:"varint,2,opt,name=epoch_count,json=epochCount,proto3" json:"epoch_count,omitempty"`
}

func (x *MasterMetadata) Reset() {
	*x = MasterMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MasterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterMetadata) ProtoMessage() {}

func (x *MasterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterMetadata.ProtoReflect.Descriptor instead.
func (*MasterMetadata) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{14}
}

func (x *MasterMetadata) GetMaster() uint32 {
	if x != nil {
		return x.Master
	}
	return 0
}

func (x *MasterMetadata) GetEpochCount() uint32 {
	if x != nil {
		return x.EpochCount
	}
	return 0
}

type KeyMasterMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      []byte          `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Metadata *MasterMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *KeyMasterMetadata) Reset() {
	*x = KeyMasterMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyMasterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyMasterMetadata) ProtoMessage() {}

func (x *KeyMasterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyMasterMetadata.ProtoReflect.Descriptor instead.
func (*KeyMasterMetadata) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{15}
}

func (x *KeyMasterMetadata) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *KeyMasterMetadata) GetMetadata() *MasterMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type LookupMasterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EpochId       []uint64             `protobuf:"varint,1,rep,packed,name=epoch_id,json=epochId,proto3" json:"epoch_id,omitempty"`
	LookupResults []*KeyMasterMetadata `protobuf:"bytes,2,rep,name=lookup_results,json=lookupResults,proto3" json:"lookup_results,omitempty"`
}

func (x *LookupMasterResponse) Reset() {
	*x = LookupMasterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookupMasterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupMasterResponse) ProtoMessage() {}

func (x *LookupMasterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupMasterResponse.ProtoReflect.Descriptor instead.
func (*LookupMasterResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{16}
}

func (x *LookupMasterResponse) GetEpochId() []uint64 {
	if x != nil {
		return x.EpochId
	}
	return nil
}

func (x *LookupMasterResponse) GetLookupResults() []*KeyMasterMetadata {
	if x != nil {
		return x.LookupResults
	}
	return nil
}

type RaftAcceptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From    uint32 `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	To      uint32 `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
	EpochId uint64 `protobuf:"varint,3,opt,name=epoch_id,json=epochId,proto3" json:"epoch_id,omitempty"`
	Result  uint32 `protobuf:"varint,4,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *RaftAcceptResponse) Reset() {
	*x = RaftAcceptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RaftAcceptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaftAcceptResponse) ProtoMessage() {}

func (x *RaftAcceptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaftAcceptResponse.ProtoReflect.Descriptor instead.
func (*RaftAcceptResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{17}
}

func (x *RaftAcceptResponse) GetFrom() uint32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *RaftAcceptResponse) GetTo() uint32 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *RaftAcceptResponse) GetEpochId() uint64 {
	if x != nil {
		return x.EpochId
	}
	return 0
}

func (x *RaftAcceptResponse) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type RaftCommitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From    uint32 `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	To      uint32 `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
	EpochId uint64 `protobuf:"varint,3,opt,name=epoch_id,json=epochId,proto3" json:"epoch_id,omitempty"`
	Result  uint32 `protobuf:"varint,4,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *RaftCommitResponse) Reset() {
	*x = RaftCommitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RaftCommitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaftCommitResponse) ProtoMessage() {}

func (x *RaftCommitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaftCommitResponse.ProtoReflect.Descriptor instead.
func (*RaftCommitResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{18}
}

func (x *RaftCommitResponse) GetFrom() uint32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *RaftCommitResponse) GetTo() uint32 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *RaftCommitResponse) GetEpochId() uint64 {
	if x != nil {
		return x.EpochId
	}
	return 0
}

func (x *RaftCommitResponse) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type StatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From    uint32 `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	To      uint64 `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
	EpochId uint64 `protobuf:"varint,3,opt,name=epoch_id,json=epochId,proto3" json:"epoch_id,omitempty"`
}

func (x *StatsResponse) Reset() {
	*x = StatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsResponse) ProtoMessage() {}

func (x *StatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsResponse.ProtoReflect.Descriptor instead.
func (*StatsResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{19}
}

func (x *StatsResponse) GetFrom() uint32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *StatsResponse) GetTo() uint64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *StatsResponse) GetEpochId() uint64 {
	if x != nil {
		return x.EpochId
	}
	return 0
}

type ChangeServerStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From    uint32 `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	To      uint32 `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
	Target  uint32 `protobuf:"varint,3,opt,name=target,proto3" json:"target,omitempty"`
	EpochId uint64 `protobuf:"varint,4,opt,name=epoch_id,json=epochId,proto3" json:"epoch_id,omitempty"`
	State   uint32 `protobuf:"varint,5,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *ChangeServerStateResponse) Reset() {
	*x = ChangeServerStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeServerStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeServerStateResponse) ProtoMessage() {}

func (x *ChangeServerStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeServerStateResponse.ProtoReflect.Descriptor instead.
func (*ChangeServerStateResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{20}
}

func (x *ChangeServerStateResponse) GetFrom() uint32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *ChangeServerStateResponse) GetTo() uint32 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *ChangeServerStateResponse) GetTarget() uint32 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *ChangeServerStateResponse) GetEpochId() uint64 {
	if x != nil {
		return x.EpochId
	}
	return 0
}

func (x *ChangeServerStateResponse) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

var File_server_proto protoreflect.FileDescriptor

var file_server_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc0, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x78, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x54, 0x78, 0x6e, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x09, 0x74, 0x78, 0x6e, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x78, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x08, 0x74, 0x78, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6e, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a,
	0x09, 0x72, 0x65, 0x63, 0x76, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x72,
	0x65, 0x63, 0x76, 0x4e, 0x6f, 0x64, 0x65, 0x22, 0xec, 0x04, 0x0a, 0x0b, 0x52, 0x61, 0x66, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69,
	0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x06, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x12, 0x41, 0x0a, 0x0d, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x5f, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70,
	0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x41, 0x0a, 0x0d, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x70, 0x6f,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x66, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x50, 0x0a, 0x15, 0x65, 0x70, 0x6f,
	0x63, 0x68, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61,
	0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x13, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x12, 0x37, 0x0a, 0x0c, 0x72,
	0x61, 0x66, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x61, 0x66, 0x74, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x61, 0x66, 0x74, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x61, 0x66, 0x74, 0x5f, 0x61, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x61, 0x66, 0x74, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x61, 0x66, 0x74, 0x41, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x61, 0x66, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x61, 0x66, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x0a, 0x72, 0x61, 0x66, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x2b,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0x51, 0x0a, 0x13, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x11, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x06,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x2a, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x74, 0x6f, 0x22, 0x1c, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x22, 0x42, 0x0a, 0x13, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x6e, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x06, 0x74, 0x78, 0x6e, 0x49, 0x64, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04,
	0x6b, 0x65, 0x79, 0x73, 0x22, 0x54, 0x0a, 0x13, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45,
	0x70, 0x6f, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x74, 0x6f, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x13, 0x45, 0x70,
	0x6f, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63,
	0x6b, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x49, 0x64, 0x22, 0x23, 0x0a, 0x0b,
	0x52, 0x61, 0x66, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x52, 0x0a, 0x11, 0x52, 0x61, 0x66, 0x74, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x70,
	0x6f, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x70,
	0x6f, 0x63, 0x68, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x11, 0x52, 0x61, 0x66, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e,
	0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x0c, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x22, 0xad, 0x01, 0x0a, 0x18, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x75, 0x6c, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x75, 0x6c, 0x6c,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x70, 0x6f, 0x63,
	0x68, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x70, 0x6f, 0x63,
	0x68, 0x49, 0x64, 0x22, 0xfb, 0x02, 0x0a, 0x0c, 0x52, 0x61, 0x66, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x6e, 0x67, 0x48,
	0x00, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x12, 0x42, 0x0a, 0x0d, 0x6c, 0x6f, 0x6f, 0x6b, 0x75,
	0x70, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x6c,
	0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x0b, 0x72,
	0x61, 0x66, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x61, 0x66, 0x74, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x72,
	0x61, 0x66, 0x74, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x72, 0x61, 0x66,
	0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x61, 0x66, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x61, 0x66,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0x52, 0x0a, 0x13, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x11, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x22, 0x59, 0x0a, 0x04, 0x50, 0x6f, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x0e,
	0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x65, 0x70, 0x6f,
	0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x58, 0x0a, 0x11, 0x4b, 0x65, 0x79, 0x4d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x72, 0x0a, 0x14, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x70, 0x6f,
	0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x65, 0x70, 0x6f,
	0x63, 0x68, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0e, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4b, 0x65, 0x79, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x6b, 0x0a, 0x12, 0x52, 0x61, 0x66, 0x74, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x74, 0x6f, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x6b, 0x0a, 0x12, 0x52, 0x61, 0x66, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x65, 0x70, 0x6f, 0x63, 0x68, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x4e, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x74, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x49, 0x64, 0x22,
	0x88, 0x01, 0x0a, 0x19, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x74,
	0x6f, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x70, 0x6f,
	0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x70, 0x6f,
	0x63, 0x68, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x42, 0x0e, 0x5a, 0x0c, 0x2e, 0x2f,
	0x74, 0x61, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_server_proto_rawDescOnce sync.Once
	file_server_proto_rawDescData = file_server_proto_rawDesc
)

func file_server_proto_rawDescGZIP() []byte {
	file_server_proto_rawDescOnce.Do(func() {
		file_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_proto_rawDescData)
	})
	return file_server_proto_rawDescData
}

var file_server_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_server_proto_goTypes = []interface{}{
	(*ReplyTransactionToClient)(nil),  // 0: proto.ReplyTransactionToClient
	(*RaftRequest)(nil),               // 1: proto.RaftRequest
	(*Ping)(nil),                      // 2: proto.Ping
	(*Signal)(nil),                    // 3: proto.Signal
	(*LookupMasterRequest)(nil),       // 4: proto.LookupMasterRequest
	(*ForwardEpochRequest)(nil),       // 5: proto.ForwardEpochRequest
	(*EpochReplicationAck)(nil),       // 6: proto.EpochReplicationAck
	(*RaftPropose)(nil),               // 7: proto.RaftPropose
	(*RaftAcceptRequest)(nil),         // 8: proto.RaftAcceptRequest
	(*RaftCommitRequest)(nil),         // 9: proto.RaftCommitRequest
	(*StatsRequest)(nil),              // 10: proto.StatsRequest
	(*ChangeServerStateRequest)(nil),  // 11: proto.ChangeServerStateRequest
	(*RaftResponse)(nil),              // 12: proto.RaftResponse
	(*Pong)(nil),                      // 13: proto.Pong
	(*MasterMetadata)(nil),            // 14: proto.MasterMetadata
	(*KeyMasterMetadata)(nil),         // 15: proto.KeyMasterMetadata
	(*LookupMasterResponse)(nil),      // 16: proto.LookupMasterResponse
	(*RaftAcceptResponse)(nil),        // 17: proto.RaftAcceptResponse
	(*RaftCommitResponse)(nil),        // 18: proto.RaftCommitResponse
	(*StatsResponse)(nil),             // 19: proto.StatsResponse
	(*ChangeServerStateResponse)(nil), // 20: proto.ChangeServerStateResponse
	(TxnState)(0),                     // 21: proto.TxnState
	(*Node)(nil),                      // 22: proto.Node
}
var file_server_proto_depIdxs = []int32{
	21, // 0: proto.ReplyTransactionToClient.txn_state:type_name -> proto.TxnState
	22, // 1: proto.ReplyTransactionToClient.send_node:type_name -> proto.Node
	22, // 2: proto.ReplyTransactionToClient.recv_node:type_name -> proto.Node
	2,  // 3: proto.RaftRequest.ping:type_name -> proto.Ping
	3,  // 4: proto.RaftRequest.signal:type_name -> proto.Signal
	4,  // 5: proto.RaftRequest.lookup_master:type_name -> proto.LookupMasterRequest
	5,  // 6: proto.RaftRequest.forward_epoch:type_name -> proto.ForwardEpochRequest
	6,  // 7: proto.RaftRequest.epoch_replication_ack:type_name -> proto.EpochReplicationAck
	7,  // 8: proto.RaftRequest.raft_propose:type_name -> proto.RaftPropose
	8,  // 9: proto.RaftRequest.raft_accept:type_name -> proto.RaftAcceptRequest
	9,  // 10: proto.RaftRequest.raft_commit:type_name -> proto.RaftCommitRequest
	10, // 11: proto.RaftRequest.stats:type_name -> proto.StatsRequest
	11, // 12: proto.RaftRequest.change_server_state:type_name -> proto.ChangeServerStateRequest
	13, // 13: proto.RaftResponse.pong:type_name -> proto.Pong
	16, // 14: proto.RaftResponse.lookup_master:type_name -> proto.LookupMasterResponse
	17, // 15: proto.RaftResponse.raft_accept:type_name -> proto.RaftAcceptResponse
	18, // 16: proto.RaftResponse.raft_commit:type_name -> proto.RaftCommitResponse
	19, // 17: proto.RaftResponse.stats:type_name -> proto.StatsResponse
	20, // 18: proto.RaftResponse.change_server_state:type_name -> proto.ChangeServerStateResponse
	14, // 19: proto.KeyMasterMetadata.metadata:type_name -> proto.MasterMetadata
	15, // 20: proto.LookupMasterResponse.lookup_results:type_name -> proto.KeyMasterMetadata
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_server_proto_init() }
func file_server_proto_init() {
	if File_server_proto != nil {
		return
	}
	file_transaction_proto_init()
	file_node_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyTransactionToClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RaftRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Signal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookupMasterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForwardEpochRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpochReplicationAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RaftPropose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RaftAcceptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RaftCommitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeServerStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RaftResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MasterMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyMasterMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookupMasterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RaftAcceptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RaftCommitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeServerStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_server_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*RaftRequest_Ping)(nil),
		(*RaftRequest_Signal)(nil),
		(*RaftRequest_LookupMaster)(nil),
		(*RaftRequest_ForwardEpoch)(nil),
		(*RaftRequest_EpochReplicationAck)(nil),
		(*RaftRequest_RaftPropose)(nil),
		(*RaftRequest_RaftAccept)(nil),
		(*RaftRequest_RaftCommit)(nil),
		(*RaftRequest_Stats)(nil),
		(*RaftRequest_ChangeServerState)(nil),
	}
	file_server_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*RaftResponse_Pong)(nil),
		(*RaftResponse_LookupMaster)(nil),
		(*RaftResponse_RaftAccept)(nil),
		(*RaftResponse_RaftCommit)(nil),
		(*RaftResponse_Stats)(nil),
		(*RaftResponse_ChangeServerState)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_server_proto_goTypes,
		DependencyIndexes: file_server_proto_depIdxs,
		MessageInfos:      file_server_proto_msgTypes,
	}.Build()
	File_server_proto = out.File
	file_server_proto_rawDesc = nil
	file_server_proto_goTypes = nil
	file_server_proto_depIdxs = nil
}
