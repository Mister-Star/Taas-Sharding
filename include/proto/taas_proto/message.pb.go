// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.1
// source: message.proto

package taas_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//	*Message_Txn
	//	*Message_ReplyTxnResultToClient
	//	*Message_ClientReadRequest
	//	*Message_ClientReadResponse
	//	*Message_StoragePullRequest
	//	*Message_StoragePullResponse
	//	*Message_StoragePushResponse
	//	*Message_RaftRequest
	//	*Message_RaftResponse
	Type isMessage_Type `protobuf_oneof:"type"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

func (m *Message) GetType() isMessage_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Message) GetTxn() *Transaction {
	if x, ok := x.GetType().(*Message_Txn); ok {
		return x.Txn
	}
	return nil
}

func (x *Message) GetReplyTxnResultToClient() *ReplyTransactionToClient {
	if x, ok := x.GetType().(*Message_ReplyTxnResultToClient); ok {
		return x.ReplyTxnResultToClient
	}
	return nil
}

func (x *Message) GetClientReadRequest() *ClientReadRequest {
	if x, ok := x.GetType().(*Message_ClientReadRequest); ok {
		return x.ClientReadRequest
	}
	return nil
}

func (x *Message) GetClientReadResponse() *ClientReadResponse {
	if x, ok := x.GetType().(*Message_ClientReadResponse); ok {
		return x.ClientReadResponse
	}
	return nil
}

func (x *Message) GetStoragePullRequest() *StoragePullRequest {
	if x, ok := x.GetType().(*Message_StoragePullRequest); ok {
		return x.StoragePullRequest
	}
	return nil
}

func (x *Message) GetStoragePullResponse() *StoragePullResponse {
	if x, ok := x.GetType().(*Message_StoragePullResponse); ok {
		return x.StoragePullResponse
	}
	return nil
}

func (x *Message) GetStoragePushResponse() *StoragePushResponse {
	if x, ok := x.GetType().(*Message_StoragePushResponse); ok {
		return x.StoragePushResponse
	}
	return nil
}

func (x *Message) GetRaftRequest() *RaftRequest {
	if x, ok := x.GetType().(*Message_RaftRequest); ok {
		return x.RaftRequest
	}
	return nil
}

func (x *Message) GetRaftResponse() *RaftResponse {
	if x, ok := x.GetType().(*Message_RaftResponse); ok {
		return x.RaftResponse
	}
	return nil
}

type isMessage_Type interface {
	isMessage_Type()
}

type Message_Txn struct {
	Txn *Transaction `protobuf:"bytes,1,opt,name=txn,proto3,oneof"`
}

type Message_ReplyTxnResultToClient struct {
	ReplyTxnResultToClient *ReplyTransactionToClient `protobuf:"bytes,2,opt,name=reply_txn_result_to_client,json=replyTxnResultToClient,proto3,oneof"`
}

type Message_ClientReadRequest struct {
	ClientReadRequest *ClientReadRequest `protobuf:"bytes,3,opt,name=client_read_request,json=clientReadRequest,proto3,oneof"`
}

type Message_ClientReadResponse struct {
	ClientReadResponse *ClientReadResponse `protobuf:"bytes,4,opt,name=client_read_response,json=clientReadResponse,proto3,oneof"`
}

type Message_StoragePullRequest struct {
	StoragePullRequest *StoragePullRequest `protobuf:"bytes,5,opt,name=storage_pull_request,json=storagePullRequest,proto3,oneof"`
}

type Message_StoragePullResponse struct {
	StoragePullResponse *StoragePullResponse `protobuf:"bytes,6,opt,name=storage_pull_response,json=storagePullResponse,proto3,oneof"`
}

type Message_StoragePushResponse struct {
	StoragePushResponse *StoragePushResponse `protobuf:"bytes,7,opt,name=storage_push_response,json=storagePushResponse,proto3,oneof"`
}

type Message_RaftRequest struct {
	RaftRequest *RaftRequest `protobuf:"bytes,8,opt,name=raft_request,json=raftRequest,proto3,oneof"`
}

type Message_RaftResponse struct {
	RaftResponse *RaftResponse `protobuf:"bytes,9,opt,name=raft_response,json=raftResponse,proto3,oneof"`
}

func (*Message_Txn) isMessage_Type() {}

func (*Message_ReplyTxnResultToClient) isMessage_Type() {}

func (*Message_ClientReadRequest) isMessage_Type() {}

func (*Message_ClientReadResponse) isMessage_Type() {}

func (*Message_StoragePullRequest) isMessage_Type() {}

func (*Message_StoragePullResponse) isMessage_Type() {}

func (*Message_StoragePushResponse) isMessage_Type() {}

func (*Message_RaftRequest) isMessage_Type() {}

func (*Message_RaftResponse) isMessage_Type() {}

var File_message_proto protoreflect.FileDescriptor

var file_message_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x9b, 0x05, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x03,
	0x74, 0x78, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x03, 0x74, 0x78, 0x6e, 0x12, 0x5d, 0x0a, 0x1a, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x74, 0x78,
	0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x16, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x54, 0x78, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x6f, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x12, 0x4a, 0x0a, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65,
	0x61, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x11, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x4d, 0x0a, 0x14, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x12, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d,
	0x0a, 0x14, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x75, 0x6c, 0x6c, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a,
	0x15, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x75, 0x6c, 0x6c, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x13, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x50, 0x0a, 0x15, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x75,
	0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x13, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x37, 0x0a, 0x0c, 0x72, 0x61, 0x66, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x61, 0x66, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x72,
	0x61, 0x66, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0d, 0x72, 0x61,
	0x66, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x61, 0x66, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0e,
	0x5a, 0x0c, 0x2e, 0x2f, 0x74, 0x61, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_message_proto_rawDescOnce sync.Once
	file_message_proto_rawDescData = file_message_proto_rawDesc
)

func file_message_proto_rawDescGZIP() []byte {
	file_message_proto_rawDescOnce.Do(func() {
		file_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_proto_rawDescData)
	})
	return file_message_proto_rawDescData
}

var file_message_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_message_proto_goTypes = []interface{}{
	(*Message)(nil),                  // 0: proto.Message
	(*Transaction)(nil),              // 1: proto.Transaction
	(*ReplyTransactionToClient)(nil), // 2: proto.ReplyTransactionToClient
	(*ClientReadRequest)(nil),        // 3: proto.ClientReadRequest
	(*ClientReadResponse)(nil),       // 4: proto.ClientReadResponse
	(*StoragePullRequest)(nil),       // 5: proto.StoragePullRequest
	(*StoragePullResponse)(nil),      // 6: proto.StoragePullResponse
	(*StoragePushResponse)(nil),      // 7: proto.StoragePushResponse
	(*RaftRequest)(nil),              // 8: proto.RaftRequest
	(*RaftResponse)(nil),             // 9: proto.RaftResponse
}
var file_message_proto_depIdxs = []int32{
	1, // 0: proto.Message.txn:type_name -> proto.Transaction
	2, // 1: proto.Message.reply_txn_result_to_client:type_name -> proto.ReplyTransactionToClient
	3, // 2: proto.Message.client_read_request:type_name -> proto.ClientReadRequest
	4, // 3: proto.Message.client_read_response:type_name -> proto.ClientReadResponse
	5, // 4: proto.Message.storage_pull_request:type_name -> proto.StoragePullRequest
	6, // 5: proto.Message.storage_pull_response:type_name -> proto.StoragePullResponse
	7, // 6: proto.Message.storage_push_response:type_name -> proto.StoragePushResponse
	8, // 7: proto.Message.raft_request:type_name -> proto.RaftRequest
	9, // 8: proto.Message.raft_response:type_name -> proto.RaftResponse
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_message_proto_init() }
func file_message_proto_init() {
	if File_message_proto != nil {
		return
	}
	file_transaction_proto_init()
	file_server_proto_init()
	file_client_proto_init()
	file_storage_proto_init()
	file_node_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_message_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Message_Txn)(nil),
		(*Message_ReplyTxnResultToClient)(nil),
		(*Message_ClientReadRequest)(nil),
		(*Message_ClientReadResponse)(nil),
		(*Message_StoragePullRequest)(nil),
		(*Message_StoragePullResponse)(nil),
		(*Message_StoragePushResponse)(nil),
		(*Message_RaftRequest)(nil),
		(*Message_RaftResponse)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_proto_goTypes,
		DependencyIndexes: file_message_proto_depIdxs,
		MessageInfos:      file_message_proto_msgTypes,
	}.Build()
	File_message_proto = out.File
	file_message_proto_rawDesc = nil
	file_message_proto_goTypes = nil
	file_message_proto_depIdxs = nil
}
